{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/root/todo/src/components/Timer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport useSound from 'use-sound';\nimport audio from \"./beep-07.mp3\";\n\nfunction Timer() {\n  _s();\n\n  const [started, setStarted] = useState({\n    started: false\n  });\n  const [min, setMin] = useState({\n    min: 0\n  });\n  const [play] = useSound(audio);\n\n  const handleStart = () => {\n    let newStart = !started;\n    let time = min * (60 * 1000);\n    setStarted(newStart);\n    setMin(time);\n  };\n\n  const toggleStarted = () => {\n    let newStarted = !started;\n    setStarted({\n      started: newStarted\n    });\n  };\n\n  const handleOnComplete = () => {\n    play();\n    setStarted(true);\n  };\n\n  class TimerOne extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(Countdown, {\n        date: Date.now() + (min ? min : null),\n        renderer: function (render) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: zeroPad(render.minutes) + ':' + zeroPad(render.seconds)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 92\n          }, this);\n        },\n        onComplete: () => handleOnComplete()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !started ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TimerOne, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-control\",\n        onClick: e => toggleStarted(),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"small\",\n        children: \"Don't add or drag anything! Count Down resets. To be fixed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"time\",\n        id: \"\",\n        onChange: e => setMin(e.target.value),\n        placeholder: \"Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-control bg-info\",\n        onClick: () => handleStart(),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Timer, \"qO9fIVsmPfeskM/sYeD2JIBHLJk=\", false, function () {\n  return [useSound];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/root/todo/src/components/Timer/index.js"],"names":["React","useState","useEffect","Countdown","zeroPad","useSound","audio","Timer","started","setStarted","min","setMin","play","handleStart","newStart","time","toggleStarted","newStarted","handleOnComplete","TimerOne","Component","render","Date","now","minutes","seconds","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Countdown, { zeroPad } from \"react-countdown\"\nimport useSound from 'use-sound';\nimport audio from \"./beep-07.mp3\"\nfunction Timer() {\n  const [started, setStarted] = useState({started: false})\n  const [min, setMin] = useState({min: 0});\n  const [play] = useSound(audio);\n  const handleStart = () => {\n    let newStart = !started\n    let time = min * (60 * 1000)\n    setStarted(newStart)\n    setMin(time)\n  } \n  const toggleStarted = ()=>{\n    let newStarted = !started\n    setStarted({\n      started: newStarted\n    })\n  }\n  const handleOnComplete = () =>{\n    play()\n    setStarted(true)\n  }\n  class TimerOne extends React.Component{\n    render(){\n    return(\n      <Countdown date={Date.now() + (min ? min : null)} renderer={function(render){return (<p className=\"text-center\">{zeroPad(render.minutes) + ':' + zeroPad(render.seconds)}</p>)}} onComplete={() => handleOnComplete()}>\n      </Countdown>\n    )\n    }\n  }\n    return (\n      <div>\n        {\n          !started ?\n            (<div>\n              <h2>Timer</h2>\n              <TimerOne/>\n              <button className=\"form-control\" onClick={(e) => toggleStarted()}>Stop</button>\n              <p className=\"small\">Don't add or drag anything! Count Down resets. To be fixed.</p>\n            </div>\n            )\n            : (<div>\n              <h2>Timer</h2>\n\n              <input type=\"text\" name=\"time\" id=\"\" onChange={(e) => setMin(e.target.value)} placeholder=\"Minutes\" />\n              <br />\n              <button className=\"form-control bg-info\" onClick={()=> handleStart()}>Start</button>\n            </div>)\n        }\n      </div>\n    )\n  }\nexport default Timer;"]},"metadata":{},"sourceType":"module"}