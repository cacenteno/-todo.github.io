{"ast":null,"code":"import _slicedToArray from\"/root/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import NavLinks from\"./NavLinks\";import React from\"react\";import{HashRouter as Router,Link}from\"react-router-dom\";import{useState}from\"react\";import routes from\"../../routes\";function NavBar(props){var _useState=useState({toggle:false}),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var toggleNav=function toggleNav(){setToggle(!toggle);};var logOut=function logOut(){props.history.push(\"/todo.github.io/login\");props.logOut();};return/*#__PURE__*/_jsx(Router,{forceRefresh:true,children:/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar navbar-expand-lg navbar-light bg-light\",children:[/*#__PURE__*/_jsx(Link,{className:\"navbar-brand\",to:\"/\",children:\"Logo\"}),/*#__PURE__*/_jsx(\"button\",{className:\"navbar-toggler\",type:\"button\",onClick:function onClick(){return toggleNav();},children:/*#__PURE__*/_jsx(\"span\",{className:\"navbar-toggler-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"collapse navbar-collapse \".concat(toggle?\"\":\"show\"),id:\"navbarNav\",children:props.token?/*#__PURE__*/_jsxs(\"ul\",{className:\"navbar-nav ml-auto\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/profile\",children:\"Profile\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#logout\",className:\"nav-link\",onClick:function onClick(){return props.logOut();},children:\"Log Out\"})})]}):/*#__PURE__*/_jsx(\"ul\",{className:\"navbar-nav ml-auto\",children:/*#__PURE__*/_jsx(NavLinks,{links:routes})})})]})});}export default NavBar;","map":{"version":3,"sources":["/root/todo/src/components/NavBar/index.js"],"names":["NavLinks","React","HashRouter","Router","Link","useState","routes","NavBar","props","toggle","setToggle","toggleNav","logOut","history","push","token"],"mappings":"yNAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAU,GAAIC,CAAAA,MAAvB,CAA+BC,IAA/B,KAA2C,kBAA3C,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,eACQH,QAAQ,CAAC,CAACI,MAAM,CAAE,KAAT,CAAD,CADhB,wCACbA,MADa,eACLC,SADK,eAEnB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAK,CACnBD,SAAS,CAAE,CAACD,MAAH,CAAT,CACH,CAFD,CAGA,GAAMG,CAAAA,MAAM,CAAE,QAARA,CAAAA,MAAQ,EAAI,CACdJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,uBAAnB,EACAN,KAAK,CAACI,MAAN,GACH,CAHD,CAII,mBACI,KAAC,MAAD,EAAQ,YAAY,CAAE,IAAtB,uBACA,aAAK,SAAS,CAAC,+CAAf,wBACA,KAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,CAA+B,EAAE,CAAC,GAAlC,kBADA,cAEA,eAAQ,SAAS,CAAC,gBAAlB,CAAmC,IAAI,CAAC,QAAxC,CAAiD,OAAO,CAAE,yBAAMD,CAAAA,SAAS,EAAf,EAA1D,uBACI,aAAM,SAAS,CAAC,qBAAhB,EADJ,EAFA,cAKA,YAAK,SAAS,oCAA8BF,MAAM,CAAG,EAAH,CAAQ,MAA5C,CAAd,CAAqE,EAAE,CAAC,WAAxE,UACED,KAAK,CAACO,KAAN,cAAe,YAAI,SAAS,CAAC,oBAAd,wBACT,WAAI,SAAS,CAAC,UAAd,uBAAyB,KAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAC,UAA9B,qBAAzB,EADS,cAET,WAAI,SAAS,CAAC,UAAd,uBAA0B,UAAG,IAAI,CAAC,SAAR,CAAkB,SAAS,CAAC,UAA5B,CAAuC,OAAO,CAAE,yBAAKP,CAAAA,KAAK,CAACI,MAAN,EAAL,EAAhD,qBAA1B,EAFS,GAAf,cAGW,WAAI,SAAS,CAAC,oBAAd,uBACL,KAAC,QAAD,EAAU,KAAK,CAAEN,MAAjB,EADK,EAJb,EALA,GADA,EADJ,CAiBH,CAEL,cAAeC,CAAAA,MAAf","sourcesContent":["import NavLinks from \"./NavLinks\"\nimport React from \"react\";\nimport { HashRouter as Router, Link } from \"react-router-dom\";\nimport {useState} from \"react\"\nimport routes from \"../../routes\"\nfunction NavBar(props) {\n    const[toggle, setToggle] = useState({toggle: false})\n    const toggleNav = () =>{\n        setToggle( !toggle)\n    }\n    const logOut= ()=>{\n        props.history.push(\"/todo.github.io/login\")\n        props.logOut()\n    }\n        return (\n            <Router forceRefresh={true}>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\">Logo</Link>\n            <button className=\"navbar-toggler\" type=\"button\" onClick={() => toggleNav()}>\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className={`collapse navbar-collapse ${toggle ? \"\" : \"show\" }`} id=\"navbarNav\">\n            { props.token ? (<ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/profile\">Profile</Link></li>\n                    <li className=\"nav-item\" ><a href=\"#logout\" className=\"nav-link\" onClick={()=> props.logOut()}>Log Out</a></li>\n                </ul>): (<ul className=\"navbar-nav ml-auto\">\n                    <NavLinks links={routes} />\n                </ul>)}\n            </div>\n        </nav>\n        </Router>)\n    }\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}