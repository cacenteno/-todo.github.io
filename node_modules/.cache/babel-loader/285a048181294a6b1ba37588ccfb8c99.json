{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/root/todo/src/components/TodoList/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst TodoList = props => {\n  function handleDragEnd(result) {\n    const items = Array.from(props.todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    console.log(result.destination);\n    items.splice(result.destination.index, 0, reorderedItem);\n    props.reorderTodos(props.token, items);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"ToDos\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pl-0\",\n        ...provided.droppableProps,\n        style: {\n          listStyleType: \"none\"\n        },\n        ref: provided.innerRef,\n        children: [props.todos[0] ? props.todos.map((todo, index) => {\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: todo._id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", { ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              ref: provided.innerRef,\n              children: /*#__PURE__*/_jsxDEV(Todo, { ...props,\n                todo: todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 45\n            }, this)\n          }, todo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 45\n          }, this);\n        }) : null, provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/root/todo/src/components/TodoList/index.js"],"names":["React","useEffect","useState","Todo","DragDropContext","Droppable","Draggable","TodoList","props","handleDragEnd","result","items","Array","from","todos","reorderedItem","splice","source","index","console","log","destination","reorderTodos","token","provided","droppableProps","listStyleType","innerRef","map","todo","_id","draggableProps","dragHandleProps","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,WAASC,aAAT,CAAuBC,MAAvB,EAA8B;AAC1B,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACM,KAAjB,CAAd;AACA,UAAM,CAACC,aAAD,IAAkBJ,KAAK,CAACK,MAAN,CAAaN,MAAM,CAACO,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,WAAnB;AACAV,IAAAA,KAAK,CAACK,MAAN,CAAaN,MAAM,CAACW,WAAP,CAAmBH,KAAhC,EAAsC,CAAtC,EAAwCH,aAAxC;AACAP,IAAAA,KAAK,CAACc,YAAN,CAAmBd,KAAK,CAACe,KAAzB,EAA+BZ,KAA/B;AACH;;AACD,sBACI,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEF,aAA5B;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,OAAvB;AAAA,gBACMe,QAAD,iBACG;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,WAAwBA,QAAQ,CAACC,cAAjC;AAAiD,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE;AAAhB,SAAxD;AAAiF,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAA/F;AAAA,mBAEQnB,KAAK,CAACM,KAAN,CAAY,CAAZ,IACIN,KAAK,CAACM,KAAN,CAAYc,GAAZ,CAAgB,CAACC,IAAD,EAAOX,KAAP,KAAiB;AAC7B,8BAAQ,QAAC,SAAD;AAA0B,YAAA,WAAW,EAAEW,IAAI,CAACC,GAA5C;AAAiD,YAAA,KAAK,EAAEZ,KAAxD;AAAA,sBACFM,QAAD,iBACG,mBAAQA,QAAQ,CAACO,cAAjB;AAAA,iBAAqCP,QAAQ,CAACQ,eAA9C;AAA+D,cAAA,GAAG,EAAER,QAAQ,CAACG,QAA7E;AAAA,qCACI,QAAC,IAAD,OAAUnB,KAAV;AAAiB,gBAAA,IAAI,EAAEqB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA,aAAgBA,IAAI,CAACC,GAArB;AAAA;AAAA;AAAA;AAAA,kBAAR;AAOH,SARD,CADJ,GAWI,IAbZ,EAeKN,QAAQ,CAACS,WAfd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAjCD;;KAAM1B,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nconst TodoList = (props) => {\n    function handleDragEnd(result){\n        const items = Array.from(props.todos);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(result.destination)\n        items.splice(result.destination.index,0,reorderedItem);\n        props.reorderTodos(props.token,items)\n    }\n    return (\n        <DragDropContext onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"ToDos\">\n                {(provided) => (\n                    <ul className=\"pl-0\"{...provided.droppableProps} style={{listStyleType: \"none\"}} ref={provided.innerRef}>\n                        {\n                            props.todos[0] ?\n                                props.todos.map((todo, index) => {\n                                    return (<Draggable key={todo._id} draggableId={todo._id} index={index}>\n                                        {(provided) => (\n                                            <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} >\n                                                <Todo {...props} todo={todo} />\n                                            </li>\n                                        )}\n                                    </Draggable>)\n                                })\n                                :\n                                null\n                        }\n                        {provided.placeholder}\n                    </ul>\n                )}\n            </Droppable>\n        </DragDropContext>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}