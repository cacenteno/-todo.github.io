{"ast":null,"code":"import _objectSpread from\"/root/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/root/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState}from\"react\";import Todo from\"./Todo\";import{DragDropContext,Droppable,Draggable}from\"react-beautiful-dnd\";var TodoList=function TodoList(props){function handleDragEnd(result){var items=Array.from(props.todos);var _items$splice=items.splice(result.source.index,1),_items$splice2=_slicedToArray(_items$splice,1),reorderedItem=_items$splice2[0];console.log(result.destination);items.splice(result.destination.index,0,reorderedItem);props.reorderTodos(props.token,items);props.setTodos(items);}return/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsx(Droppable,{droppableId:\"ToDos\",children:function children(provided){return/*#__PURE__*/_jsxs(\"ul\",_objectSpread(_objectSpread({className:\"pl-0\"},provided.droppableProps),{},{style:{listStyleType:\"none\"},ref:provided.innerRef,children:[props.todos[0]?props.todos.map(function(todo,index){return/*#__PURE__*/_jsx(Draggable,{draggableId:todo._id,index:index,children:function children(provided){return/*#__PURE__*/_jsx(\"li\",_objectSpread(_objectSpread(_objectSpread({},provided.draggableProps),provided.dragHandleProps),{},{ref:provided.innerRef,children:/*#__PURE__*/_jsx(Todo,_objectSpread(_objectSpread({},props),{},{todo:todo}))}));}},todo._id);}):null,provided.placeholder]}));}})});};export default TodoList;","map":{"version":3,"sources":["/root/todo/src/components/TodoList/index.js"],"names":["React","useEffect","useState","Todo","DragDropContext","Droppable","Draggable","TodoList","props","handleDragEnd","result","items","Array","from","todos","splice","source","index","reorderedItem","console","log","destination","reorderTodos","token","setTodos","provided","droppableProps","listStyleType","innerRef","map","todo","_id","draggableProps","dragHandleProps","placeholder"],"mappings":"yVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,qBAAtD,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,QAASC,CAAAA,aAAT,CAAuBC,MAAvB,CAA8B,CAC1B,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACM,KAAjB,CAAd,CAD0B,kBAEFH,KAAK,CAACI,MAAN,CAAaL,MAAM,CAACM,MAAP,CAAcC,KAA3B,CAAkC,CAAlC,CAFE,gDAEnBC,aAFmB,mBAG1BC,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,WAAnB,EACAV,KAAK,CAACI,MAAN,CAAaL,MAAM,CAACW,WAAP,CAAmBJ,KAAhC,CAAsC,CAAtC,CAAwCC,aAAxC,EACAV,KAAK,CAACc,YAAN,CAAmBd,KAAK,CAACe,KAAzB,CAA+BZ,KAA/B,EACAH,KAAK,CAACgB,QAAN,CAAeb,KAAf,EACH,CACD,mBACI,KAAC,eAAD,EAAiB,SAAS,CAAEF,aAA5B,uBACI,KAAC,SAAD,EAAW,WAAW,CAAC,OAAvB,UACK,kBAACgB,QAAD,qBACG,wCAAI,SAAS,CAAC,MAAd,EAAwBA,QAAQ,CAACC,cAAjC,MAAiD,KAAK,CAAE,CAACC,aAAa,CAAE,MAAhB,CAAxD,CAAiF,GAAG,CAAEF,QAAQ,CAACG,QAA/F,WAEQpB,KAAK,CAACM,KAAN,CAAY,CAAZ,EACIN,KAAK,CAACM,KAAN,CAAYe,GAAZ,CAAgB,SAACC,IAAD,CAAOb,KAAP,CAAiB,CAC7B,mBAAQ,KAAC,SAAD,EAA0B,WAAW,CAAEa,IAAI,CAACC,GAA5C,CAAiD,KAAK,CAAEd,KAAxD,UACH,kBAACQ,QAAD,qBACG,uDAAQA,QAAQ,CAACO,cAAjB,EAAqCP,QAAQ,CAACQ,eAA9C,MAA+D,GAAG,CAAER,QAAQ,CAACG,QAA7E,uBACI,KAAC,IAAD,gCAAUpB,KAAV,MAAiB,IAAI,CAAEsB,IAAvB,GADJ,GADH,EADG,EAAgBA,IAAI,CAACC,GAArB,CAAR,CAOH,CARD,CADJ,CAWI,IAbZ,CAeKN,QAAQ,CAACS,WAfd,IADH,EADL,EADJ,EADJ,CAyBH,CAlCD,CAoCA,cAAe3B,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nconst TodoList = (props) => {\n    function handleDragEnd(result){\n        const items = Array.from(props.todos);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(result.destination)\n        items.splice(result.destination.index,0,reorderedItem);\n        props.reorderTodos(props.token,items)\n        props.setTodos(items)\n    }\n    return (\n        <DragDropContext onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"ToDos\">\n                {(provided) => (\n                    <ul className=\"pl-0\"{...provided.droppableProps} style={{listStyleType: \"none\"}} ref={provided.innerRef}>\n                        {\n                            props.todos[0] ?\n                                props.todos.map((todo, index) => {\n                                    return (<Draggable key={todo._id} draggableId={todo._id} index={index}>\n                                        {(provided) => (\n                                            <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} >\n                                                <Todo {...props} todo={todo} />\n                                            </li>\n                                        )}\n                                    </Draggable>)\n                                })\n                                :\n                                null\n                        }\n                        {provided.placeholder}\n                    </ul>\n                )}\n            </Droppable>\n        </DragDropContext>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}